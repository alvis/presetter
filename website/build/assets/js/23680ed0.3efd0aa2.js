"use strict";(self.webpackChunkpresetter_website=self.webpackChunkpresetter_website||[]).push([[3069],{8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(6540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}},9008:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"presets/foundation/essentials","title":"presetter-preset-essentials","description":"\ud83c\udfc4\ud83c\udffb A collection of opinionated configurations for a TypeScript project","source":"@site/docs/presets/foundation/essentials.md","sourceDirName":"presets/foundation","slug":"/presets/foundation/essentials","permalink":"/presetter/docs/presets/foundation/essentials","draft":false,"unlisted":false,"editUrl":"https://github.com/alvis/presetter/tree/master/website/docs/presets/foundation/essentials.md","tags":[],"version":"current","lastUpdatedBy":null,"lastUpdatedAt":null,"sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"presetter-preset-essentials"},"sidebar":"tutorialSidebar","previous":{"title":"Foundation Presets","permalink":"/presetter/docs/presets/foundation/"},"next":{"title":"Preset Ecosystem","permalink":"/presetter/docs/presets/"}}');var r=s(4848),t=s(8453);const l={sidebar_position:2,title:"presetter-preset-essentials"},o="presetter-preset-essentials",c={},d=[{value:"\ud83c\udfaf Purpose",id:"-purpose",level:2},{value:"\ud83d\ude80 Features",id:"-features",level:2},{value:"Core Development Tools",id:"core-development-tools",level:3},{value:"Quality Assurance",id:"quality-assurance",level:3},{value:"Developer Experience",id:"developer-experience",level:3},{value:"\ud83d\udcab Installation",id:"-installation",level:2},{value:"Quick Start",id:"quick-start",level:3},{value:"Package.json Setup",id:"packagejson-setup",level:3},{value:"\ud83d\udccb Configuration Files Generated",id:"-configuration-files-generated",level:2},{value:"\ud83d\udcc1 Project Structure",id:"-project-structure",level:2},{value:"\ud83d\udccb Available Scripts",id:"-available-scripts",level:2},{value:"Build &amp; Development",id:"build--development",level:3},{value:"<code>run build</code>",id:"run-build",level:4},{value:"<code>run clean</code>",id:"run-clean",level:4},{value:"<code>run develop -- &lt;file-path&gt;</code>",id:"run-develop----file-path",level:4},{value:"Testing",id:"testing",level:3},{value:"<code>run test</code>",id:"run-test",level:4},{value:"<code>run test:unit</code>",id:"run-testunit",level:4},{value:"<code>run test:int</code>",id:"run-testint",level:4},{value:"<code>run test:e2e</code>",id:"run-teste2e",level:4},{value:"<code>run watch</code>",id:"run-watch",level:4},{value:"<code>run coverage</code>",id:"run-coverage",level:4},{value:"Release Management",id:"release-management",level:3},{value:"<code>run release</code>",id:"run-release",level:4},{value:"\ud83d\udd29 Customization",id:"-customization",level:2},{value:"Basic Customization",id:"basic-customization",level:3},{value:"Advanced Configuration Override",id:"advanced-configuration-override",level:3},{value:"Combining with Other Presets",id:"combining-with-other-presets",level:3},{value:"\ud83d\udcbb Included Dependencies",id:"-included-dependencies",level:2},{value:"Core Tools",id:"core-tools",level:3},{value:"ESLint Plugins",id:"eslint-plugins",level:3},{value:"Build &amp; Development",id:"build--development-1",level:3},{value:"Quality &amp; Tooling",id:"quality--tooling",level:3},{value:"\ud83d\udd27 Common Use Cases",id:"-common-use-cases",level:2},{value:"Node.js Application",id:"nodejs-application",level:3},{value:"NPM Library",id:"npm-library",level:3},{value:"Workspace Package",id:"workspace-package",level:3},{value:"\u26a1 Performance Tips",id:"-performance-tips",level:2},{value:"Faster Builds",id:"faster-builds",level:3},{value:"Efficient Testing",id:"efficient-testing",level:3},{value:"Optimized Linting",id:"optimized-linting",level:3},{value:"\ud83d\udc1b Troubleshooting",id:"-troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Performance Issues",id:"performance-issues",level:3},{value:"\ud83d\udd17 Integration Examples",id:"-integration-examples",level:2},{value:"CI/CD Pipeline",id:"cicd-pipeline",level:3},{value:"VS Code Integration",id:"vs-code-integration",level:3},{value:"\ud83d\udd04 Migration Guide",id:"-migration-guide",level:2},{value:"From Manual Setup",id:"from-manual-setup",level:3},{value:"From Create React App",id:"from-create-react-app",level:3},{value:"\ud83d\udd70\ufe0f Next Steps",id:"\ufe0f-next-steps",level:2},{value:"\ud83d\udcda Related Resources",id:"-related-resources",level:2}];function a(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"presetter-preset-essentials",children:"presetter-preset-essentials"})}),"\n",(0,r.jsxs)(n.p,{children:["\ud83c\udfc4\ud83c\udffb ",(0,r.jsx)(n.em,{children:"A collection of opinionated configurations for a TypeScript project"})]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"essentials preset"})," is the foundation of the Presetter ecosystem, providing all the core development tools and configurations you need to build modern TypeScript projects. It's designed to get you from zero to productive development in seconds."]}),"\n",(0,r.jsx)(n.h2,{id:"-purpose",children:"\ud83c\udfaf Purpose"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"presetter-preset-essentials"})," eliminates the tedious setup of TypeScript development environments by providing:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Instant productivity"}),": Start coding immediately without configuration overhead"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Best practices"}),": Pre-configured tools following community standards"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type safety"}),": Strict TypeScript configuration for robust development"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Quality assurance"}),": Automated linting, formatting, and testing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Developer experience"}),": Git hooks, hot reloading, and helpful scripts"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-features",children:"\ud83d\ude80 Features"}),"\n",(0,r.jsx)(n.h3,{id:"core-development-tools",children:"Core Development Tools"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udee0\ufe0f TypeScript"})," - Type-safe JavaScript with strict configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udea8 ESLint 9"})," - Code quality enforcement with TypeScript support"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udc85 Prettier 3"})," - Consistent code formatting"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83e\uddea Vitest 3"})," - Fast unit testing with coverage reporting"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udcb0 Standard Version"})," - Automated semantic versioning and changelogs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udd27 zx"})," - Cross-platform shell scripting"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"quality-assurance",children:"Quality Assurance"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Git hooks"})," with Husky for pre-commit quality checks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Lint-staged"})," for efficient linting of changed files"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Coverage reporting"})," with comprehensive test metrics"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Automatic .gitignore"})," integration with ESLint"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"developer-experience",children:"Developer Experience"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Hot reloading"})," for development workflow"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Watch mode"})," for continuous testing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cross-platform"})," script compatibility"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Path mapping"})," support for clean imports"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-installation",children:"\ud83d\udcab Installation"}),"\n",(0,r.jsx)(n.h3,{id:"quick-start",children:"Quick Start"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Install the preset\nnpm install --save-dev presetter presetter-preset-essentials\n\n# Create configuration\necho \"export { default } from 'presetter-preset-essentials';\" > presetter.config.ts\n\n# Bootstrap your project\nnpm install\n"})}),"\n",(0,r.jsx)(n.h3,{id:"packagejson-setup",children:"Package.json Setup"}),"\n",(0,r.jsxs)(n.p,{children:["Add these scripts to your ",(0,r.jsx)(n.code,{children:"package.json"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "type": "module",\n  "main": "lib/index.js",\n  "types": "lib/index.d.ts",\n  "scripts": {\n    "prepare": "run prepare",\n    "build": "run build",\n    "clean": "run clean",\n    "test": "run test",\n    "watch": "run watch",\n    "coverage": "run coverage"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-configuration-files-generated",children:"\ud83d\udccb Configuration Files Generated"}),"\n",(0,r.jsx)(n.p,{children:"After bootstrapping, your project will include:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"tsconfig.json"})})," - TypeScript compiler configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"tsconfig.build.json"})})," - Production build configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"eslint.config.ts"})})," - ESLint rules and plugins"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:".prettierrc.json"})})," - Code formatting preferences"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"vitest.config.ts"})})," - Test runner configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:".lintstagedrc.json"})})," - Pre-commit hook configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:".npmignore"})})," - NPM packaging exclusions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:".husky/"})})," - Git hook scripts"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-project-structure",children:"\ud83d\udcc1 Project Structure"}),"\n",(0,r.jsx)(n.p,{children:"The preset expects this project structure:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"(root)\n \u251c\u2500 .git\n \u251c\u2500 .husky/\n \u251c\u2500 .lintstagedrc.json\n \u251c\u2500 .npmignore\n \u251c\u2500 .prettierrc.json\n \u251c\u2500 presetter.config.ts\n \u251c\u2500 node_modules/\n \u251c\u2500 src/\n \u2502   \u251c\u2500 index.ts          # Main entry point\n \u2502   \u2514\u2500 (other files)\n \u251c\u2500 spec/\n \u2502   \u2514\u2500 *.spec.ts         # Test files\n \u251c\u2500 package.json\n \u251c\u2500 eslint.config.ts\n \u251c\u2500 tsconfig.json\n \u251c\u2500 tsconfig.build.json\n \u2514\u2500 vitest.config.ts\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-available-scripts",children:"\ud83d\udccb Available Scripts"}),"\n",(0,r.jsx)(n.h3,{id:"build--development",children:"Build & Development"}),"\n",(0,r.jsx)(n.h4,{id:"run-build",children:(0,r.jsx)(n.code,{children:"run build"})}),"\n",(0,r.jsx)(n.p,{children:"Transpile TypeScript source code and replace any mapped paths."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run build\n# or\nrun build\n"})}),"\n",(0,r.jsx)(n.h4,{id:"run-clean",children:(0,r.jsx)(n.code,{children:"run clean"})}),"\n",(0,r.jsx)(n.p,{children:"Clean up any previously transpiled code."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"run clean\n"})}),"\n",(0,r.jsx)(n.h4,{id:"run-develop----file-path",children:(0,r.jsx)(n.code,{children:"run develop -- <file-path>"})}),"\n",(0,r.jsx)(n.p,{children:"Create a development service that runs the specified file whenever source code changes."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"run develop -- src/server.ts\n"})}),"\n",(0,r.jsx)(n.h3,{id:"testing",children:"Testing"}),"\n",(0,r.jsx)(n.h4,{id:"run-test",children:(0,r.jsx)(n.code,{children:"run test"})}),"\n",(0,r.jsx)(n.p,{children:"Run all tests with Vitest."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"run test\n\n# With options\nrun test -- --watch\nrun test -- --ui\n"})}),"\n",(0,r.jsx)(n.h4,{id:"run-testunit",children:(0,r.jsx)(n.code,{children:"run test:unit"})}),"\n",(0,r.jsxs)(n.p,{children:["Run unit tests only (files matching ",(0,r.jsx)(n.code,{children:"*:UNIT"})," pattern)."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"run test:unit\n"})}),"\n",(0,r.jsx)(n.h4,{id:"run-testint",children:(0,r.jsx)(n.code,{children:"run test:int"})}),"\n",(0,r.jsxs)(n.p,{children:["Run integration tests only (files matching ",(0,r.jsx)(n.code,{children:"*:INT"})," pattern)."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"run test:int\n"})}),"\n",(0,r.jsx)(n.h4,{id:"run-teste2e",children:(0,r.jsx)(n.code,{children:"run test:e2e"})}),"\n",(0,r.jsxs)(n.p,{children:["Run end-to-end tests only (files matching ",(0,r.jsx)(n.code,{children:"*:E2E"})," pattern)."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"run test:e2e\n"})}),"\n",(0,r.jsx)(n.h4,{id:"run-watch",children:(0,r.jsx)(n.code,{children:"run watch"})}),"\n",(0,r.jsx)(n.p,{children:"Continuously run unit tests whenever source code changes."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"run watch\n"})}),"\n",(0,r.jsx)(n.h4,{id:"run-coverage",children:(0,r.jsx)(n.code,{children:"run coverage"})}),"\n",(0,r.jsx)(n.p,{children:"Run all tests with coverage reporting."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"run coverage\n"})}),"\n",(0,r.jsx)(n.h3,{id:"release-management",children:"Release Management"}),"\n",(0,r.jsx)(n.h4,{id:"run-release",children:(0,r.jsx)(n.code,{children:"run release"})}),"\n",(0,r.jsx)(n.p,{children:"Bump version and automatically generate changelog using Standard Version."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"run release\n\n# With prerelease tag\nrun release -- --prerelease alpha\nrun release -- --prerelease beta\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-customization",children:"\ud83d\udd29 Customization"}),"\n",(0,r.jsx)(n.h3,{id:"basic-customization",children:"Basic Customization"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// presetter.config.ts\nimport { preset } from 'presetter-types';\nimport essentials from 'presetter-preset-essentials';\n\nexport default preset('my-project', {\n  extends: [essentials],\n  variables: {\n    source: 'lib',        // Change from default 'src'\n    output: 'dist',       // Change from default 'lib'\n    test: 'tests',        // Change from default 'spec'\n    target: 'ES2020'      // Change TypeScript target\n  }\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"advanced-configuration-override",children:"Advanced Configuration Override"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// presetter.config.ts\nimport { preset } from 'presetter-types';\nimport essentials from 'presetter-preset-essentials';\n\nexport default preset('custom-project', {\n  extends: [essentials],\n  override: {\n    assets: {\n      'tsconfig.json': {\n        compilerOptions: {\n          strict: false,           // Relax TypeScript strictness\n          experimentalDecorators: true  // Enable decorators\n        }\n      },\n      'eslint.config.ts': (current) => ({\n        ...current,\n        rules: {\n          ...current.rules,\n          'no-console': 'warn',    // Allow console with warning\n          '@typescript-eslint/no-explicit-any': 'off'  // Allow any type\n        }\n      }),\n      'vitest.config.ts': {\n        test: {\n          globals: true,           // Enable global test functions\n          environment: 'jsdom'     // Use jsdom for DOM testing\n        }\n      }\n    }\n  }\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"combining-with-other-presets",children:"Combining with Other Presets"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// presetter.config.ts\nimport { preset } from 'presetter-types';\nimport essentials from 'presetter-preset-essentials';\nimport strict from 'presetter-preset-strict';\n\nexport default preset('production-ready', {\n  extends: [essentials, strict],  // Add strict quality rules\n  variables: {\n    target: 'ES2022'\n  }\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-included-dependencies",children:"\ud83d\udcbb Included Dependencies"}),"\n",(0,r.jsx)(n.h3,{id:"core-tools",children:"Core Tools"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"typescript"})," (>=4.7.0) - TypeScript compiler"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"eslint"})," (^9.18.0) - Linting utility"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"prettier"})," (^3.0.0) - Code formatter"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"vitest"})," (^3.0.0) - Test framework"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"eslint-plugins",children:"ESLint Plugins"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@typescript-eslint/eslint-plugin"})," - TypeScript-specific rules"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"eslint-plugin-import"})," - Import/export syntax checking"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"eslint-plugin-jsdoc"})," - JSDoc comment validation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@eslint-community/eslint-plugin-eslint-comments"})," - ESLint directive validation"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"build--development-1",children:"Build & Development"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tsx"})," (^4.0.0) - TypeScript execution and REPL"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tsc-alias"})," (^1.0.0) - Path mapping resolution"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tsc-esm-fix"})," (^3.0.0) - ESM compatibility fixes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"cross-env"})," (^7.0.0) - Cross-platform environment variables"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"jiti"})," (^2.0.0) - Runtime TypeScript and ESM support"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"quality--tooling",children:"Quality & Tooling"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"husky"})," (^9.0.0) - Git hook management"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"lint-staged"})," (^15.0.0) - Run linters on staged files"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"standard-version"})," (^9.0.0) - Automated versioning"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@vitest/coverage-v8"})," (^3.0.0) - Test coverage reporting"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"zx"})," (^8.0.0) - Shell scripting utilities"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-common-use-cases",children:"\ud83d\udd27 Common Use Cases"}),"\n",(0,r.jsx)(n.h3,{id:"nodejs-application",children:"Node.js Application"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// presetter.config.ts\nexport { default } from \'presetter-preset-essentials\';\n\n// package.json\n{\n  "type": "module",\n  "main": "lib/index.js",\n  "bin": {\n    "my-cli": "lib/cli.js"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"npm-library",children:"NPM Library"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// presetter.config.ts\nimport { preset } from 'presetter-types';\nimport essentials from 'presetter-preset-essentials';\n\nexport default preset('my-library', {\n  extends: [essentials],\n  variables: {\n    target: 'ES2018'  // Broader compatibility for libraries\n  },\n  override: {\n    assets: {\n      'package.json': {\n        files: ['lib'],\n        exports: {\n          '.': {\n            types: './lib/index.d.ts',\n            import: './lib/index.js'\n          }\n        }\n      }\n    }\n  }\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"workspace-package",children:"Workspace Package"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// presetter.config.ts\nimport { preset } from 'presetter-types';\nimport essentials from 'presetter-preset-essentials';\n\nexport default preset('workspace-package', {\n  extends: [essentials],\n  variables: {\n    source: 'src',\n    output: 'dist'\n  }\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-performance-tips",children:"\u26a1 Performance Tips"}),"\n",(0,r.jsx)(n.h3,{id:"faster-builds",children:"Faster Builds"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"--skipLibCheck"})," in TypeScript for faster compilation"]}),"\n",(0,r.jsxs)(n.li,{children:["Enable ",(0,r.jsx)(n.code,{children:"incremental"})," compilation for large projects"]}),"\n",(0,r.jsxs)(n.li,{children:["Consider ",(0,r.jsx)(n.code,{children:"--transpileOnly"})," for development builds"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"efficient-testing",children:"Efficient Testing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use test patterns to run specific test suites"}),"\n",(0,r.jsx)(n.li,{children:"Enable coverage only when needed"}),"\n",(0,r.jsx)(n.li,{children:"Utilize watch mode for development"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"optimized-linting",children:"Optimized Linting"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use lint-staged to lint only changed files"}),"\n",(0,r.jsx)(n.li,{children:"Configure ESLint cache for faster subsequent runs"}),"\n",(0,r.jsx)(n.li,{children:"Set appropriate ignore patterns"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-troubleshooting",children:"\ud83d\udc1b Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"TypeScript compilation errors:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check TypeScript configuration\ncat tsconfig.json\n\n# Verify target compatibility\nnpx tsc --showConfig\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"ESLint configuration conflicts:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Test ESLint configuration\nnpx eslint --print-config src/index.ts\n\n# Debug rules\nnpx eslint src/index.ts --debug\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Test failures:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Run tests with verbose output\nrun test -- --reporter=verbose\n\n# Check Vitest configuration\ncat vitest.config.ts\n"})}),"\n",(0,r.jsx)(n.h3,{id:"performance-issues",children:"Performance Issues"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Slow builds:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Enable TypeScript incremental compilation"}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"--skipLibCheck"})," for faster compilation"]}),"\n",(0,r.jsx)(n.li,{children:"Consider excluding large dependencies from type checking"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Slow tests:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use test patterns to run specific suites"}),"\n",(0,r.jsx)(n.li,{children:"Enable test parallelization"}),"\n",(0,r.jsx)(n.li,{children:"Mock expensive operations"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-integration-examples",children:"\ud83d\udd17 Integration Examples"}),"\n",(0,r.jsx)(n.h3,{id:"cicd-pipeline",children:"CI/CD Pipeline"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# .github/workflows/ci.yml\nname: CI\non: [push, pull_request]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-node@v3\n        with:\n          node-version: '18'\n          cache: 'npm'\n      \n      - run: npm ci\n      - run: npm run lint\n      - run: npm run test\n      - run: npm run build\n"})}),"\n",(0,r.jsx)(n.h3,{id:"vs-code-integration",children:"VS Code Integration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'// .vscode/settings.json\n{\n  "typescript.preferences.includePackageJsonAutoImports": "on",\n  "eslint.format.enable": true,\n  "editor.defaultFormatter": "esbenp.prettier-vscode",\n  "editor.formatOnSave": true,\n  "editor.codeActionsOnSave": {\n    "source.fixAll.eslint": true\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-migration-guide",children:"\ud83d\udd04 Migration Guide"}),"\n",(0,r.jsx)(n.h3,{id:"from-manual-setup",children:"From Manual Setup"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# 1. Remove existing tool configurations\nrm .eslintrc.* prettier.config.* jest.config.* tsconfig.json\n\n# 2. Install presetter\nnpm install --save-dev presetter presetter-preset-essentials\n\n# 3. Create preset configuration\necho \"export { default } from 'presetter-preset-essentials';\" > presetter.config.ts\n\n# 4. Bootstrap\nnpm install\n"})}),"\n",(0,r.jsx)(n.h3,{id:"from-create-react-app",children:"From Create React App"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# 1. Eject first (if needed)\nnpm run eject\n\n# 2. Install presetter\nnpm install --save-dev presetter presetter-preset-essentials\n\n# 3. Create configuration\necho \"export { default } from 'presetter-preset-essentials';\" > presetter.config.ts\n\n# 4. Bootstrap and clean up\nnpm install\nrm -rf config/ scripts/  # Remove CRA configs\n"})}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-next-steps",children:"\ud83d\udd70\ufe0f Next Steps"}),"\n",(0,r.jsx)(n.p,{children:"After setting up the essentials preset:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Choose module system"}),": Add ",(0,r.jsx)(n.a,{href:"../module-systems/esm",children:"ESM"}),", ",(0,r.jsx)(n.a,{href:"../module-systems/cjs",children:"CJS"}),", or ",(0,r.jsx)(n.a,{href:"../module-systems/hybrid",children:"Hybrid"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Enhance quality"}),": Consider ",(0,r.jsx)(n.a,{href:"../quality/strict",children:"Strict preset"})," for additional rules"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Add framework support"}),": Integrate ",(0,r.jsx)(n.a,{href:"../frameworks/react",children:"React"})," or ",(0,r.jsx)(n.a,{href:"../frameworks/web",children:"Web"})," tools"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Bundle for distribution"}),": Use ",(0,r.jsx)(n.a,{href:"../bundling/rollup",children:"Rollup preset"})," for libraries"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-related-resources",children:"\ud83d\udcda Related Resources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/introduction/configuration",children:"Configuration Guide"})," - Deep dive into customization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/cli-reference",children:"CLI Reference"})," - Command usage and options"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../module-systems",children:"Module System Presets"})," - ESM, CJS, and Hybrid configurations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/alvis/presetter",children:"GitHub Repository"})," - Source code and issues"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);