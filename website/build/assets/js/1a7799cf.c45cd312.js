"use strict";(self.webpackChunkpresetter_website=self.webpackChunkpresetter_website||[]).push([[7610],{1932:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"cli-reference/index","title":"CLI Reference","description":"The Presetter CLI provides powerful commands for managing your project configuration and running scripts efficiently.","source":"@site/docs/cli-reference/index.md","sourceDirName":"cli-reference","slug":"/cli-reference/","permalink":"/presetter/docs/cli-reference/","draft":false,"unlisted":false,"editUrl":"https://github.com/alvis/presetter/tree/master/website/docs/cli-reference/index.md","tags":[],"version":"current","lastUpdatedBy":null,"lastUpdatedAt":null,"sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"CLI Reference"},"sidebar":"tutorialSidebar","previous":{"title":"Configuration","permalink":"/presetter/docs/introduction/configuration"},"next":{"title":"CLI Reference","permalink":"/presetter/docs/cli-reference/"}}');var r=s(4848),i=s(8453);const l={sidebar_position:1,title:"CLI Reference"},a="CLI Reference",c={},d=[{value:"Available Commands",id:"available-commands",level:2},{value:"Project Setup",id:"project-setup",level:3},{value:"Script Execution",id:"script-execution",level:3},{value:"Command Shortcuts",id:"command-shortcuts",level:2},{value:"Global Options",id:"global-options",level:2},{value:"Advanced Pattern Matching",id:"advanced-pattern-matching",level:2},{value:"Single-level Wildcards (<code>*</code>)",id:"single-level-wildcards-",level:3},{value:"Multi-level Wildcards (<code>**</code>)",id:"multi-level-wildcards-",level:3},{value:"Specific Pattern Examples",id:"specific-pattern-examples",level:3},{value:"Argument Handling",id:"argument-handling",level:2},{value:"Global Arguments",id:"global-arguments",level:3},{value:"Task-Specific Arguments",id:"task-specific-arguments",level:3},{value:"Argument Substitution",id:"argument-substitution",level:3},{value:"Quick Start Examples",id:"quick-start-examples",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Sequential Execution",id:"sequential-execution",level:3},{value:"Parallel Execution",id:"parallel-execution",level:3},{value:"Pattern-Based Selection",id:"pattern-based-selection",level:3},{value:"Integration with Package Scripts",id:"integration-with-package-scripts",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Next Steps",id:"next-steps",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"cli-reference",children:"CLI Reference"})}),"\n",(0,r.jsx)(n.p,{children:"The Presetter CLI provides powerful commands for managing your project configuration and running scripts efficiently."}),"\n",(0,r.jsx)(n.h2,{id:"available-commands",children:"Available Commands"}),"\n",(0,r.jsx)(n.h3,{id:"project-setup",children:"Project Setup"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./bootstrap",children:(0,r.jsx)(n.code,{children:"presetter bootstrap"})})," - Setup project according to specified preset"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"script-execution",children:"Script Execution"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./run",children:(0,r.jsx)(n.code,{children:"presetter run <task>"})})," - Run a single script or task"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./run-s",children:(0,r.jsx)(n.code,{children:"presetter run-s <tasks...>"})})," - Run multiple scripts sequentially"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"./run-p",children:(0,r.jsx)(n.code,{children:"presetter run-p <tasks...>"})})," - Run multiple scripts in parallel"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"command-shortcuts",children:"Command Shortcuts"}),"\n",(0,r.jsx)(n.p,{children:"For convenience, Presetter provides these standalone binaries:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"run"})," \u2192 ",(0,r.jsx)(n.code,{children:"presetter run"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"run-s"})," \u2192 ",(0,r.jsx)(n.code,{children:"presetter run-s"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"run-p"})," \u2192 ",(0,r.jsx)(n.code,{children:"presetter run-p"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"global-options",children:"Global Options"}),"\n",(0,r.jsx)(n.p,{children:"All commands support these global options:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--help"})," - Show help information for the command"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--version"})," - Show version number"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"advanced-pattern-matching",children:"Advanced Pattern Matching"}),"\n",(0,r.jsx)(n.p,{children:"Presetter supports sophisticated task selection patterns:"}),"\n",(0,r.jsxs)(n.h3,{id:"single-level-wildcards-",children:["Single-level Wildcards (",(0,r.jsx)(n.code,{children:"*"}),")"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"test:*"})," - Run all direct subtasks of ",(0,r.jsx)(n.code,{children:"test"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"build:*"})," - Run all direct subtasks of ",(0,r.jsx)(n.code,{children:"build"})]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"multi-level-wildcards-",children:["Multi-level Wildcards (",(0,r.jsx)(n.code,{children:"**"}),")"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"test:**"})," - Run all test-related tasks at any depth"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"build:**"})," - Run all build-related tasks recursively"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"specific-pattern-examples",children:"Specific Pattern Examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Available tasks: task1, task1:subtask1, task1:subtask2, task1:subtask1:deep\npresetter run "task1:*"           # Runs: task1:subtask1, task1:subtask2\npresetter run "task1:**"          # Runs: task1:subtask1, task1:subtask2, task1:subtask1:deep\npresetter run "task1:*:deep"      # Runs: task1:subtask1:deep\n'})}),"\n",(0,r.jsx)(n.h2,{id:"argument-handling",children:"Argument Handling"}),"\n",(0,r.jsx)(n.h3,{id:"global-arguments",children:"Global Arguments"}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.code,{children:"--"})," to separate global arguments that apply to all tasks:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"presetter run-s lint test build -- --verbose --strict\n"})}),"\n",(0,r.jsx)(n.h3,{id:"task-specific-arguments",children:"Task-Specific Arguments"}),"\n",(0,r.jsx)(n.p,{children:"For sequential and parallel execution, specify arguments per task:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'presetter run-s "lint -- --fix" "test -- --coverage" "build -- --minify"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"argument-substitution",children:"Argument Substitution"}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.code,{children:"{@}"})," to inject global arguments into specific positions:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'presetter run-s "test -- {@} --coverage" "lint -- --fix {@}" -- --verbose\n# Expands to: test --verbose --coverage && lint --fix --verbose\n'})}),"\n",(0,r.jsx)(n.h2,{id:"quick-start-examples",children:"Quick Start Examples"}),"\n",(0,r.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Setup project with preset\npresetter bootstrap\n\n# Run single task\npresetter run build\n\n# Run with arguments\npresetter run test -- --watch\n"})}),"\n",(0,r.jsx)(n.h3,{id:"sequential-execution",children:"Sequential Execution"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Basic sequence\npresetter run-s clean build\n\n# With arguments\npresetter run-s "lint -- --fix" "test -- --coverage" build\n'})}),"\n",(0,r.jsx)(n.h3,{id:"parallel-execution",children:"Parallel Execution"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Run multiple tasks simultaneously\npresetter run-p lint test typecheck\n\n# With arguments\npresetter run-p "test -- --watch" "lint -- --cache"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"pattern-based-selection",children:"Pattern-Based Selection"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Run all test variants\npresetter run "test:*"\n\n# Run all build-related tasks\npresetter run "build:**"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"integration-with-package-scripts",children:"Integration with Package Scripts"}),"\n",(0,r.jsxs)(n.p,{children:["Presetter merges template scripts with your local ",(0,r.jsx)(n.code,{children:"package.json"})," scripts, with local scripts taking priority:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "scripts": {\n    "build": "presetter run build",\n    "test": "presetter run test",\n    "ci": "presetter run-s lint test build"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Exit codes"}),": Commands return appropriate exit codes for CI/CD integration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Script failures"}),": In sequential mode, execution stops on first failure"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parallel failures"}),": All tasks complete, but command fails if any task fails"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pattern matching"}),": No error if pattern matches no tasks (returns success)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsx)(n.p,{children:"Explore each command in detail:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"./bootstrap",children:"bootstrap"})})," - Learn about project setup and configuration generation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"./run",children:"run"})})," - Master single task execution and template scripts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"./run-s",children:"run-s"})})," - Understand sequential task orchestration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"./run-p",children:"run-p"})})," - Leverage parallel execution for performance"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var t=s(6540);const r={},i=t.createContext(r);function l(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);