"use strict";(self.webpackChunkpresetter_website=self.webpackChunkpresetter_website||[]).push([[423],{8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var t=s(6540);const i={},r=t.createContext(i);function l(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:n},e.children)}},9853:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"tutorials/existing-project","title":"Migrating Existing Projects","description":"Step-by-step guide to convert existing projects to use Presetter configurations","source":"@site/docs/tutorials/existing-project.md","sourceDirName":"tutorials","slug":"/tutorials/existing-project","permalink":"/presetter/docs/tutorials/existing-project","draft":false,"unlisted":false,"editUrl":"https://github.com/alvis/presetter/tree/master/website/docs/tutorials/existing-project.md","tags":[],"version":"current","lastUpdatedBy":null,"lastUpdatedAt":null,"sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Migrating Existing Projects","description":"Step-by-step guide to convert existing projects to use Presetter configurations"},"sidebar":"tutorialSidebar","previous":{"title":"New Project Setup","permalink":"/presetter/docs/tutorials/new-project"},"next":{"title":"Monorepo Setup","permalink":"/presetter/docs/tutorials/monorepo-setup"}}');var i=s(4848),r=s(8453);const l={sidebar_position:3,title:"Migrating Existing Projects",description:"Step-by-step guide to convert existing projects to use Presetter configurations"},c="Migrating Existing Projects \ud83d\udd04",o={},a=[{value:"Before You Start",id:"before-you-start",level:2},{value:"Backup Your Project",id:"backup-your-project",level:3},{value:"Assess Your Current Setup",id:"assess-your-current-setup",level:3},{value:"Migration Strategy",id:"migration-strategy",level:2},{value:"Option A: Clean Migration (Recommended)",id:"option-a-clean-migration-recommended",level:3},{value:"Option B: Gradual Migration",id:"option-b-gradual-migration",level:3},{value:"Step 1: Install Presetter",id:"step-1-install-presetter",level:2},{value:"For TypeScript Libraries",id:"for-typescript-libraries",level:3},{value:"For React Applications",id:"for-react-applications",level:3},{value:"For ES Module Libraries",id:"for-es-module-libraries",level:3},{value:"For Monorepos",id:"for-monorepos",level:3},{value:"Step 2: Backup Existing Configurations",id:"step-2-backup-existing-configurations",level:2},{value:"Step 3: Bootstrap Presetter",id:"step-3-bootstrap-presetter",level:2},{value:"Step 4: Restore Custom Configurations",id:"step-4-restore-custom-configurations",level:2},{value:"Review Generated Configuration",id:"review-generated-configuration",level:3},{value:"Merge Custom Settings",id:"merge-custom-settings",level:3},{value:"Step 5: Update Package Scripts",id:"step-5-update-package-scripts",level:2},{value:"Compare Scripts",id:"compare-scripts",level:3},{value:"Preserve Custom Scripts",id:"preserve-custom-scripts",level:3},{value:"Step 6: Handle Dependencies",id:"step-6-handle-dependencies",level:2},{value:"Review Dependency Changes",id:"review-dependency-changes",level:3},{value:"Remove Redundant Dependencies",id:"remove-redundant-dependencies",level:3},{value:"Step 7: Test the Migration",id:"step-7-test-the-migration",level:2},{value:"1. Type Checking",id:"1-type-checking",level:3},{value:"2. Linting",id:"2-linting",level:3},{value:"3. Building",id:"3-building",level:3},{value:"4. Testing",id:"4-testing",level:3},{value:"Step 8: Fine-Tune Configuration",id:"step-8-fine-tune-configuration",level:2},{value:"Common Adjustments",id:"common-adjustments",level:3},{value:"Migration Checklists",id:"migration-checklists",level:2},{value:"\u2705 React Project Checklist",id:"-react-project-checklist",level:3},{value:"\u2705 Library Project Checklist",id:"-library-project-checklist",level:3},{value:"\u2705 Monorepo Checklist",id:"-monorepo-checklist",level:3},{value:"Troubleshooting Common Issues",id:"troubleshooting-common-issues",level:2},{value:"Issue: Import Path Errors",id:"issue-import-path-errors",level:3},{value:"Issue: Linting Rule Conflicts",id:"issue-linting-rule-conflicts",level:3},{value:"Issue: Build Output Changes",id:"issue-build-output-changes",level:3},{value:"Next Steps",id:"next-steps",level:2},{value:"Advanced Migration: Multiple Presets",id:"advanced-migration-multiple-presets",level:2}];function d(e){const n={admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"migrating-existing-projects-",children:"Migrating Existing Projects \ud83d\udd04"})}),"\n",(0,i.jsx)(n.p,{children:"Learn how to migrate your existing TypeScript, React, or Node.js project to Presetter. This guide helps you transition smoothly while preserving your custom configurations."}),"\n",(0,i.jsx)(n.h2,{id:"before-you-start",children:"Before You Start"}),"\n",(0,i.jsx)(n.h3,{id:"backup-your-project",children:"Backup Your Project"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Create a backup branch\ngit checkout -b backup-before-presetter\ngit commit -am "Backup before migrating to Presetter"\ngit checkout main\n'})}),"\n",(0,i.jsx)(n.h3,{id:"assess-your-current-setup",children:"Assess Your Current Setup"}),"\n",(0,i.jsx)(n.p,{children:"Take inventory of your existing configurations:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# List configuration files\nls -la | grep -E "\\.(json|js|ts|yaml|yml)$"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Common files you might have:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"tsconfig.json"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:".eslintrc.*"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"prettier.config.*"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"jest.config.*"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"rollup.config.*"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"webpack.config.*"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"migration-strategy",children:"Migration Strategy"}),"\n",(0,i.jsx)(n.h3,{id:"option-a-clean-migration-recommended",children:"Option A: Clean Migration (Recommended)"}),"\n",(0,i.jsx)(n.p,{children:"Replace existing configurations entirely with Presetter-managed ones."}),"\n",(0,i.jsx)(n.h3,{id:"option-b-gradual-migration",children:"Option B: Gradual Migration"}),"\n",(0,i.jsx)(n.p,{children:"Keep some existing configs and selectively adopt Presetter for others."}),"\n",(0,i.jsx)(n.h2,{id:"step-1-install-presetter",children:"Step 1: Install Presetter"}),"\n",(0,i.jsx)(n.p,{children:"Choose the preset that matches your project:"}),"\n",(0,i.jsx)(n.h3,{id:"for-typescript-libraries",children:"For TypeScript Libraries"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pnpm add -D presetter presetter-preset-essentials\n"})}),"\n",(0,i.jsx)(n.h3,{id:"for-react-applications",children:"For React Applications"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pnpm add -D presetter presetter-preset-react\n"})}),"\n",(0,i.jsx)(n.h3,{id:"for-es-module-libraries",children:"For ES Module Libraries"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pnpm add -D presetter presetter-preset-esm\n"})}),"\n",(0,i.jsx)(n.h3,{id:"for-monorepos",children:"For Monorepos"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pnpm add -D presetter presetter-preset-monorepo\n"})}),"\n",(0,i.jsx)(n.h2,{id:"step-2-backup-existing-configurations",children:"Step 2: Backup Existing Configurations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Create a backup directory\nmkdir config-backup\n\n# Move existing configs\nmv tsconfig.json config-backup/ 2>/dev/null || true\nmv .eslintrc.* config-backup/ 2>/dev/null || true\nmv eslint.config.* config-backup/ 2>/dev/null || true\nmv prettier.config.* config-backup/ 2>/dev/null || true\nmv jest.config.* config-backup/ 2>/dev/null || true\n"})}),"\n",(0,i.jsx)(n.h2,{id:"step-3-bootstrap-presetter",children:"Step 3: Bootstrap Presetter"}),"\n",(0,i.jsx)(n.p,{children:"Run the bootstrap command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"presetter bootstrap\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will create:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"presetter.config.ts"})," - Main configuration"]}),"\n",(0,i.jsx)(n.li,{children:"Fresh configuration files based on your preset"}),"\n",(0,i.jsxs)(n.li,{children:["Updated ",(0,i.jsx)(n.code,{children:"package.json"})," scripts"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"step-4-restore-custom-configurations",children:"Step 4: Restore Custom Configurations"}),"\n",(0,i.jsx)(n.h3,{id:"review-generated-configuration",children:"Review Generated Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["Check the generated ",(0,i.jsx)(n.code,{children:"presetter.config.ts"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="presetter.config.ts"',children:"import presetReact from 'presetter-preset-react';\n\nexport default presetReact;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"merge-custom-settings",children:"Merge Custom Settings"}),"\n",(0,i.jsx)(n.p,{children:"If you had custom configurations, merge them into the Presetter config:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="presetter.config.ts"',children:"import presetReact from 'presetter-preset-react';\n\nexport default presetReact({\n  // Custom variables\n  variables: {\n    source: 'src',        // Your source directory\n    output: 'dist',       // Your build output\n    port: 3001,          // Custom dev server port\n  },\n  \n  // Custom asset overrides\n  assets: {\n    // Extend TypeScript config\n    'tsconfig.json': {\n      compilerOptions: {\n        // Add your custom compiler options\n        paths: {\n          '@/*': ['./src/*'],\n          '@components/*': ['./src/components/*']\n        }\n      }\n    },\n    \n    // Extend ESLint config\n    '.eslintrc.json': (current) => ({\n      ...current,\n      rules: {\n        ...current.rules,\n        // Add your custom rules\n        'no-console': 'warn',\n        '@typescript-eslint/no-unused-vars': 'error'\n      }\n    })\n  }\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"step-5-update-package-scripts",children:"Step 5: Update Package Scripts"}),"\n",(0,i.jsx)(n.h3,{id:"compare-scripts",children:"Compare Scripts"}),"\n",(0,i.jsxs)(n.p,{children:["Review the scripts Presetter added to your ",(0,i.jsx)(n.code,{children:"package.json"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="package.json (before)"',children:'{\n  "scripts": {\n    "build": "tsc",\n    "test": "jest",\n    "lint": "eslint src/**/*.ts",\n    "format": "prettier --write src/**/*.ts"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="package.json (after)"',children:'{\n  "scripts": {\n    "build": "run build",\n    "clean": "run clean",\n    "format": "run format", \n    "lint": "run lint",\n    "test": "run test",\n    "typecheck": "run typecheck",\n    "watch": "run watch"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"preserve-custom-scripts",children:"Preserve Custom Scripts"}),"\n",(0,i.jsx)(n.p,{children:"Keep any custom scripts you need:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="package.json"',children:'{\n  "scripts": {\n    // Presetter-managed scripts\n    "build": "run build",\n    "test": "run test",\n    \n    // Your custom scripts\n    "deploy": "npm run build && aws s3 sync dist/ s3://my-bucket",\n    "storybook": "storybook dev -p 6006",\n    "analyze": "npm run build && npx webpack-bundle-analyzer"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"step-6-handle-dependencies",children:"Step 6: Handle Dependencies"}),"\n",(0,i.jsx)(n.h3,{id:"review-dependency-changes",children:"Review Dependency Changes"}),"\n",(0,i.jsx)(n.p,{children:"Compare your old and new dependencies:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check what Presetter added\ngit diff package.json\n"})}),"\n",(0,i.jsx)(n.h3,{id:"remove-redundant-dependencies",children:"Remove Redundant Dependencies"}),"\n",(0,i.jsx)(n.p,{children:"Presetter presets include many common dev dependencies. Remove duplicates:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Examples of dependencies you might remove\npnpm remove -D typescript eslint prettier\npnpm remove -D @typescript-eslint/parser @typescript-eslint/eslint-plugin\npnpm remove -D eslint-config-prettier eslint-plugin-react\n"})}),"\n",(0,i.jsx)(n.admonition,{title:"Keep Project Dependencies",type:"warning",children:(0,i.jsxs)(n.p,{children:["Only remove ",(0,i.jsx)(n.strong,{children:"dev dependencies"})," that are now provided by Presetter. Keep your project's runtime dependencies."]})}),"\n",(0,i.jsx)(n.h2,{id:"step-7-test-the-migration",children:"Step 7: Test the Migration"}),"\n",(0,i.jsx)(n.h3,{id:"1-type-checking",children:"1. Type Checking"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pnpm run typecheck\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"If you get errors:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Check ",(0,i.jsx)(n.code,{children:"tsconfig.json"})," paths configuration"]}),"\n",(0,i.jsx)(n.li,{children:"Verify all source files are included"}),"\n",(0,i.jsx)(n.li,{children:"Compare with backup config if needed"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-linting",children:"2. Linting"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pnpm run lint\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"If you get linting errors:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Review ESLint rule differences"}),"\n",(0,i.jsxs)(n.li,{children:["Adjust rules in ",(0,i.jsx)(n.code,{children:"presetter.config.ts"})," if needed"]}),"\n",(0,i.jsxs)(n.li,{children:["Run ",(0,i.jsx)(n.code,{children:"pnpm run lint --fix"})," for auto-fixable issues"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3-building",children:"3. Building"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pnpm run build\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"If build fails:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Check TypeScript configuration"}),"\n",(0,i.jsx)(n.li,{children:"Verify all imports resolve correctly"}),"\n",(0,i.jsx)(n.li,{children:"Compare build output with previous setup"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"4-testing",children:"4. Testing"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pnpm run test\n"})}),"\n",(0,i.jsx)(n.h2,{id:"step-8-fine-tune-configuration",children:"Step 8: Fine-Tune Configuration"}),"\n",(0,i.jsx)(n.h3,{id:"common-adjustments",children:"Common Adjustments"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Custom TypeScript paths:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="presetter.config.ts"',children:"export default preset({\n  assets: {\n    'tsconfig.json': {\n      compilerOptions: {\n        baseUrl: '.',\n        paths: {\n          '@/*': ['./src/*'],\n          '@utils/*': ['./src/utils/*']\n        }\n      }\n    }\n  }\n});\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Custom ESLint rules:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="presetter.config.ts"',children:"export default preset({\n  assets: {\n    '.eslintrc.json': (current) => ({\n      ...current,\n      rules: {\n        ...current.rules,\n        'prefer-const': 'error',\n        'no-var': 'error'\n      }\n    })\n  }\n});\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Custom build output:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="presetter.config.ts"',children:"export default preset({\n  variables: {\n    output: 'build', // Instead of default 'lib'\n  }\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"migration-checklists",children:"Migration Checklists"}),"\n",(0,i.jsx)(n.h3,{id:"-react-project-checklist",children:"\u2705 React Project Checklist"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","React preset installed"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","JSX files lint correctly"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","React hooks rules work"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Build includes JSX transform"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Dev server starts correctly"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"-library-project-checklist",children:"\u2705 Library Project Checklist"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","TypeScript builds without errors"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Declaration files generate correctly"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Package.json exports are correct"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Tests run successfully"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Linting covers all source files"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"-monorepo-checklist",children:"\u2705 Monorepo Checklist"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Root configuration applies to all packages"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Individual package configs work"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Cross-package imports resolve"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Build processes work for all packages"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting-common-issues",children:"Troubleshooting Common Issues"}),"\n",(0,i.jsx)(n.h3,{id:"issue-import-path-errors",children:"Issue: Import Path Errors"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Problem:"})," Module resolution fails after migration\n",(0,i.jsx)(n.strong,{children:"Solution:"})," Update ",(0,i.jsx)(n.code,{children:"tsconfig.json"})," baseUrl and paths:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="presetter.config.ts"',children:"export default preset({\n  assets: {\n    'tsconfig.json': {\n      compilerOptions: {\n        baseUrl: '.',\n        paths: {\n          '@/*': ['./src/*']  // Match your import patterns\n        }\n      }\n    }\n  }\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"issue-linting-rule-conflicts",children:"Issue: Linting Rule Conflicts"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Problem:"})," New ESLint rules conflict with existing code\n",(0,i.jsx)(n.strong,{children:"Solution:"})," Gradually adopt stricter rules:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="presetter.config.ts"',children:"export default preset({\n  assets: {\n    '.eslintrc.json': (current) => ({\n      ...current,\n      rules: {\n        ...current.rules,\n        // Temporarily downgrade problematic rules\n        '@typescript-eslint/no-explicit-any': 'warn',\n        'react-hooks/exhaustive-deps': 'warn'\n      }\n    })\n  }\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"issue-build-output-changes",children:"Issue: Build Output Changes"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Problem:"})," Build output structure doesn't match deployment expectations\n",(0,i.jsx)(n.strong,{children:"Solution:"})," Customize output directory and structure:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="presetter.config.ts"',children:"export default preset({\n  variables: {\n    output: 'build',  // Match your deployment scripts\n  },\n  assets: {\n    'tsconfig.json': {\n      compilerOptions: {\n        outDir: 'build',\n        rootDir: 'src'\n      }\n    }\n  }\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsx)(n.p,{children:"After successful migration:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Update CI/CD"}),": Ensure your deployment scripts use the new npm scripts"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Team Training"}),": Share the migration changes with your team"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Documentation"}),": Update project README with new development workflow"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Monitoring"}),": Watch for any issues in the first few development cycles"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"advanced-migration-multiple-presets",children:"Advanced Migration: Multiple Presets"}),"\n",(0,i.jsx)(n.p,{children:"For complex projects, you might need multiple presets:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:'title="presetter.config.ts"',children:"import presetEssentials from 'presetter-preset-essentials';\nimport presetReact from 'presetter-preset-react';\nimport presetStrict from 'presetter-preset-strict';\n\nexport default [\n  presetEssentials,\n  presetReact,\n  presetStrict // Additional strict rules for code quality\n];\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Migration Time:"})," 15-30 minutes",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Difficulty:"})," Intermediate",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Prerequisites:"})," Existing TypeScript/JavaScript project"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);