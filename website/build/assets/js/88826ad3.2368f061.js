"use strict";(self.webpackChunkpresetter_website=self.webpackChunkpresetter_website||[]).push([[2221],{4576:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"cli-reference/bootstrap","title":"presetter bootstrap","description":"Setup the project according to the specified preset by generating configuration files and installing dependencies.","source":"@site/docs/cli-reference/bootstrap.md","sourceDirName":"cli-reference","slug":"/cli-reference/bootstrap","permalink":"/presetter/docs/cli-reference/bootstrap","draft":false,"unlisted":false,"editUrl":"https://github.com/alvis/presetter/tree/master/website/docs/cli-reference/bootstrap.md","tags":[],"version":"current","lastUpdatedBy":null,"lastUpdatedAt":null,"sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"presetter bootstrap"},"sidebar":"tutorialSidebar","previous":{"title":"CLI Reference","permalink":"/presetter/docs/cli-reference/"},"next":{"title":"presetter run","permalink":"/presetter/docs/cli-reference/run"}}');var i=s(4848),r=s(8453);const o={sidebar_position:2,title:"presetter bootstrap"},l="presetter bootstrap",c={},a=[{value:"Synopsis",id:"synopsis",level:2},{value:"Description",id:"description",level:2},{value:"Options",id:"options",level:2},{value:"<code>--only &lt;file&gt;</code>",id:"--only-file",level:3},{value:"<code>-p, --projects &lt;patterns...&gt;</code>",id:"-p---projects-patterns",level:3},{value:"Global Options",id:"global-options",level:3},{value:"Examples",id:"examples",level:2},{value:"Basic Project Setup",id:"basic-project-setup",level:3},{value:"Monorepo Setup",id:"monorepo-setup",level:3},{value:"Conditional Bootstrapping",id:"conditional-bootstrapping",level:3},{value:"Integration with Package Scripts",id:"integration-with-package-scripts",level:3},{value:"What Gets Generated",id:"what-gets-generated",level:2},{value:"Configuration Files",id:"configuration-files",level:3},{value:"Dependency Installation",id:"dependency-installation",level:3},{value:"File Linking Strategy",id:"file-linking-strategy",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Verification",id:"verification",level:3},{value:"Advanced Usage",id:"advanced-usage",level:2},{value:"Custom Bootstrap Logic",id:"custom-bootstrap-logic",level:3},{value:"Integration with Build Tools",id:"integration-with-build-tools",level:3},{value:"Environment-Specific Configs",id:"environment-specific-configs",level:3},{value:"Related Commands",id:"related-commands",level:2},{value:"See Also",id:"see-also",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"presetter-bootstrap",children:"presetter bootstrap"})}),"\n",(0,i.jsx)(n.p,{children:"Setup the project according to the specified preset by generating configuration files and installing dependencies."}),"\n",(0,i.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"presetter bootstrap [options]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"bootstrap"})," command is the core setup command that:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reads your preset configuration"})," from ",(0,i.jsx)(n.code,{children:"presetter.config.ts"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Installs development dependencies"})," defined by the preset"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Generates configuration files"})," (tsconfig.json, eslint.config.ts, etc.)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Creates symlinks/hardlinks"})," to keep configs synchronized with the preset"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Merges scripts"})," from preset with your local package.json"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"This command is typically run:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"After installing Presetter and a preset for the first time"}),"\n",(0,i.jsx)(n.li,{children:"When updating to a new preset version"}),"\n",(0,i.jsx)(n.li,{children:"When adding Presetter to an existing project"}),"\n",(0,i.jsx)(n.li,{children:"As part of your npm install lifecycle (via postinstall hooks)"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(n.h3,{id:"--only-file",children:(0,i.jsx)(n.code,{children:"--only <file>"})}),"\n",(0,i.jsx)(n.p,{children:"Proceed only if the specified file exists. Useful for conditional bootstrapping."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Only bootstrap if package.json exists\npresetter bootstrap --only package.json\n\n# Only bootstrap if preset config exists\npresetter bootstrap --only presetter.config.ts\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Use cases:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"CI/CD pipelines that should only run in certain contexts"}),"\n",(0,i.jsx)(n.li,{children:"Monorepo setups where not all packages need bootstrapping"}),"\n",(0,i.jsx)(n.li,{children:"Conditional setup based on project structure"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"-p---projects-patterns",children:(0,i.jsx)(n.code,{children:"-p, --projects <patterns...>"})}),"\n",(0,i.jsx)(n.p,{children:"Specify glob patterns matching target project folders containing package.json."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default:"})," ",(0,i.jsx)(n.code,{children:'["."'})," (current directory)"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Bootstrap multiple packages in a monorepo\npresetter bootstrap --projects "packages/*" "apps/*"\n\n# Bootstrap all packages recursively\npresetter bootstrap --projects "**/package.json"\n\n# Bootstrap specific packages\npresetter bootstrap --projects "packages/core" "packages/utils"\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Pattern Examples:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"packages/*"'})," - All direct subdirectories in packages/"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"apps/*/"'})," - All app directories"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"."'})," - Current directory only"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"**/"'})," - All directories recursively (use with caution)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"global-options",children:"Global Options"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--help"})," - Show help information"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--version"})," - Show version number"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.h3,{id:"basic-project-setup",children:"Basic Project Setup"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# First time setup\nnpm install --save-dev presetter presetter-preset-esm\necho \"export { default } from 'presetter-preset-esm';\" > presetter.config.ts\npresetter bootstrap\n"})}),"\n",(0,i.jsx)(n.h3,{id:"monorepo-setup",children:"Monorepo Setup"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Bootstrap all packages in a monorepo\npresetter bootstrap --projects "packages/*" "apps/*"\n\n# Only bootstrap packages that have a presetter config\npresetter bootstrap --projects "packages/*" --only presetter.config.ts\n'})}),"\n",(0,i.jsx)(n.h3,{id:"conditional-bootstrapping",children:"Conditional Bootstrapping"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Only bootstrap in CI if lock file exists\npresetter bootstrap --only package-lock.json\n\n# Bootstrap for production deployment only\nif [ "$NODE_ENV" = "production" ]; then\n  presetter bootstrap\nfi\n'})}),"\n",(0,i.jsx)(n.h3,{id:"integration-with-package-scripts",children:"Integration with Package Scripts"}),"\n",(0,i.jsxs)(n.p,{children:["Add to your ",(0,i.jsx)(n.code,{children:"package.json"})," for automatic bootstrapping:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "scripts": {\n    "bootstrap": "presetter bootstrap",\n    "postinstall": "presetter bootstrap",\n    "prepare": "presetter bootstrap"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Lifecycle hook usage:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"postinstall"})," - Runs after ",(0,i.jsx)(n.code,{children:"npm install"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"prepare"})," - Runs before publishing and after ",(0,i.jsx)(n.code,{children:"npm install"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"prepack"})," - Runs before creating package tarball"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"what-gets-generated",children:"What Gets Generated"}),"\n",(0,i.jsx)(n.p,{children:"The bootstrap command typically generates:"}),"\n",(0,i.jsx)(n.h3,{id:"configuration-files",children:"Configuration Files"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tsconfig.json"})," - TypeScript compiler configuration"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"eslint.config.ts"})," - ESLint linting rules"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"vitest.config.ts"})," - Vitest testing configuration"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:".prettierrc.json"})," - Prettier formatting rules"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:".gitignore"})," - Git ignore patterns"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"package.json"})," scripts - Merged with preset scripts"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"dependency-installation",children:"Dependency Installation"}),"\n",(0,i.jsx)(n.p,{children:"Automatic installation of preset peer dependencies:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"TypeScript compiler and types"}),"\n",(0,i.jsx)(n.li,{children:"ESLint and plugins"}),"\n",(0,i.jsx)(n.li,{children:"Testing frameworks (Vitest, Jest)"}),"\n",(0,i.jsx)(n.li,{children:"Build tools (Rollup, Vite)"}),"\n",(0,i.jsx)(n.li,{children:"Formatting tools (Prettier)"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"file-linking-strategy",children:"File Linking Strategy"}),"\n",(0,i.jsx)(n.p,{children:"Presetter uses intelligent file linking:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hard links"})," for small config files (fast, space-efficient)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Symlinks"})," for larger files or when hard links aren't supported"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Direct generation"})," for complex configs that need project-specific content"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Permission Errors:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Try with elevated permissions\nsudo presetter bootstrap\n\n# Or fix npm permissions\nnpm config set prefix ~/.npm-global\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"File Conflicts:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Existing configs will be backed up automatically\n# Check .presetter-backup/ directory for originals\nls -la .presetter-backup/\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Missing Dependencies:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Ensure preset is properly installed\nnpm list presetter-preset-esm\n\n# Reinstall if needed\nnpm install --save-dev presetter-preset-esm\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Monorepo Issues:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Use absolute patterns for complex structures\npresetter bootstrap --projects "$(pwd)/packages/*"\n\n# Debug with verbose output\nDEBUG=presetter:* presetter bootstrap --projects "packages/*"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"verification",children:"Verification"}),"\n",(0,i.jsx)(n.p,{children:"After running bootstrap, verify the setup:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check generated files\nls -la tsconfig.json eslint.config.ts vitest.config.ts\n\n# Verify dependencies are installed\nnpm list typescript eslint vitest\n\n# Test the setup\nnpm run test\nnpm run lint\nnpm run build\n"})}),"\n",(0,i.jsx)(n.h2,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,i.jsx)(n.h3,{id:"custom-bootstrap-logic",children:"Custom Bootstrap Logic"}),"\n",(0,i.jsx)(n.p,{children:"Create a wrapper script for complex bootstrap scenarios:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// scripts/bootstrap.ts\nimport { bootstrap } from 'presetter/preset';\nimport { existsSync } from 'fs';\n\n// Custom bootstrap logic\nif (existsSync('custom.config.js')) {\n  console.log('Custom configuration detected');\n  await bootstrap('.', { customMode: true });\n} else {\n  await bootstrap('.');\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"integration-with-build-tools",children:"Integration with Build Tools"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Vite integration\necho "import { defineConfig } from \'vite\'; export default defineConfig({});" > vite.config.ts\npresetter bootstrap\n\n# Webpack integration\necho "module.exports = {};" > webpack.config.js\npresetter bootstrap\n'})}),"\n",(0,i.jsx)(n.h3,{id:"environment-specific-configs",children:"Environment-Specific Configs"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// presetter.config.ts\nexport default preset('env-aware', (context) => {\n  const isDev = process.env.NODE_ENV === 'development';\n  \n  return {\n    assets: {\n      'tsconfig.json': {\n        compilerOptions: {\n          sourceMap: isDev,\n          strict: !isDev\n        }\n      }\n    }\n  };\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"related-commands",children:"Related Commands"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"./run",children:(0,i.jsx)(n.code,{children:"presetter run"})})})," - Execute scripts generated by bootstrap"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"./run-s",children:(0,i.jsx)(n.code,{children:"presetter run-s"})})})," - Run multiple scripts sequentially"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"./run-p",children:(0,i.jsx)(n.code,{children:"presetter run-p"})})})," - Run multiple scripts in parallel"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/introduction/getting-started",children:"Getting Started Guide"})," - First time setup"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/introduction/configuration",children:"Configuration Guide"})," - Customizing your setup"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/presets",children:"Preset Ecosystem"})," - Available presets"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var t=s(6540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);